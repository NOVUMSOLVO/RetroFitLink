apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: datadog-agent
  namespace: retrofitlink-prod
  labels:
    app: datadog-agent
    component: apm
spec:
  selector:
    matchLabels:
      app: datadog-agent
  template:
    metadata:
      labels:
        app: datadog-agent
      annotations:
        container.apparmor.security.beta.kubernetes.io/agent: unconfined
    spec:
      serviceAccountName: datadog-agent
      containers:
      - name: agent
        image: gcr.io/datadoghq/agent:7
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        - containerPort: 8126
          name: traceport
          protocol: TCP
        env:
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              name: datadog-secret
              key: api-key
        - name: DD_SITE
          value: "datadoghq.com"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBERNETES
          value: "true"
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "true"
        - name: DD_LEADER_ELECTION
          value: "true"
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "true"
        - name: DD_PROCESS_AGENT_ENABLED
          value: "true"
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "true"
        - name: DD_AC_EXCLUDE
          value: "name:datadog-agent"
        - name: DD_CLUSTER_NAME
          value: "retrofitlink-prod"
        - name: DD_ENV
          value: "production"
        - name: DD_SERVICE
          value: "retrofitlink"
        - name: DD_VERSION
          value: "1.0.0"
        volumeMounts:
        - name: config
          mountPath: /etc/datadog-agent/datadog.yaml
          subPath: datadog.yaml
        - name: dockersocketdir
          mountPath: /host/var/run
          mountPropagation: None
          readOnly: true
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        - name: debugfs
          mountPath: /sys/kernel/debug
          mountPropagation: None
        - name: s6-run
          mountPath: /var/run/s6
        - name: logpodpath
          mountPath: /var/log/pods
          mountPropagation: None
          readOnly: true
        - name: logcontainerpath
          mountPath: /var/lib/docker/containers
          mountPropagation: None
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: 5555
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 5555
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        securityContext:
          runAsUser: 0
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_RESOURCE
              - SYS_PTRACE
              - NET_ADMIN
              - NET_BROADCAST
              - NET_RAW
              - IPC_LOCK
              - CHOWN
      initContainers:
      - name: init-volume
        image: gcr.io/datadoghq/agent:7
        imagePullPolicy: Always
        command: ["bash", "-c"]
        args:
          - cp -r /etc/datadog-agent /opt/datadog-agent/
        volumeMounts:
        - name: config
          mountPath: /opt/datadog-agent
        - name: procdir
          mountPath: /host/proc
          mountPropagation: None
          readOnly: true
        - name: cgroups
          mountPath: /host/sys/fs/cgroup
          mountPropagation: None
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: datadog-config
      - name: dockersocketdir
        hostPath:
          path: /var/run
      - name: procdir
        hostPath:
          path: /proc
      - name: cgroups
        hostPath:
          path: /sys/fs/cgroup
      - name: debugfs
        hostPath:
          path: /sys/kernel/debug
      - name: s6-run
        emptyDir: {}
      - name: logpodpath
        hostPath:
          path: /var/log/pods
      - name: logcontainerpath
        hostPath:
          path: /var/lib/docker/containers
      tolerations:
      - operator: Exists
      hostNetwork: true
      hostPID: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: datadog-agent
  namespace: retrofitlink-prod
  labels:
    app: datadog-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: datadog-agent
  labels:
    app: datadog-agent
rules:
- apiGroups: [""]
  resources:
  - services
  - events
  - endpoints
  - pods
  - nodes
  - componentstatuses
  verbs: ["get", "list", "watch"]
- apiGroups: ["quota.openshift.io"]
  resources:
  - clusterresourcequotas
  verbs: ["get", "list"]
- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]
- apiGroups: [""]
  resources:
  - configmaps
  resourceNames: ["datadog-leader-election"]
  verbs: ["get", "update"]
- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["create"]
- nonResourceURLs: ["/version", "/healthz", "/metrics"]
  verbs: ["get"]
- apiGroups: ["apps"]
  resources:
  - deployments
  - replicasets
  - daemonsets
  verbs: ["list", "watch"]
- apiGroups: ["batch"]
  resources:
  - cronjobs
  - jobs
  verbs: ["list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: datadog-agent
  labels:
    app: datadog-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: datadog-agent
subjects:
- kind: ServiceAccount
  name: datadog-agent
  namespace: retrofitlink-prod
