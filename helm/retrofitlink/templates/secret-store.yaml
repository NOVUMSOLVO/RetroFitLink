{{- if .Values.externalSecrets.enabled }}
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ include "retrofitlink.fullname" . }}-secret-store
  labels:
    {{- include "retrofitlink.labels" . | nindent 4 }}
spec:
  {{- if eq .Values.externalSecrets.provider "aws" }}
  provider:
    aws:
      service: SecretsManager
      region: {{ .Values.externalSecrets.aws.region }}
      {{- if .Values.externalSecrets.aws.role }}
      role: {{ .Values.externalSecrets.aws.role }}
      {{- end }}
      auth:
        {{- if .Values.externalSecrets.aws.accessKey }}
        secretRef:
          accessKeyID:
            name: {{ .Values.externalSecrets.aws.accessKey.secretName }}
            key: {{ .Values.externalSecrets.aws.accessKey.key }}
          secretAccessKey:
            name: {{ .Values.externalSecrets.aws.secretKey.secretName }}
            key: {{ .Values.externalSecrets.aws.secretKey.key }}
        {{- else }}
        jwt:
          serviceAccountRef:
            name: {{ include "retrofitlink.serviceAccountName" . }}
        {{- end }}
  {{- else if eq .Values.externalSecrets.provider "vault" }}
  provider:
    vault:
      server: {{ .Values.externalSecrets.vault.server }}
      path: {{ .Values.externalSecrets.vault.path }}
      version: {{ .Values.externalSecrets.vault.version | default "v2" }}
      auth:
        {{- if .Values.externalSecrets.vault.kubernetes }}
        kubernetes:
          mountPath: {{ .Values.externalSecrets.vault.kubernetes.mountPath | default "kubernetes" }}
          role: {{ .Values.externalSecrets.vault.kubernetes.role }}
          serviceAccountRef:
            name: {{ include "retrofitlink.serviceAccountName" . }}
        {{- else if .Values.externalSecrets.vault.token }}
        tokenSecretRef:
          name: {{ .Values.externalSecrets.vault.token.secretName }}
          key: {{ .Values.externalSecrets.vault.token.key }}
        {{- end }}
  {{- else if eq .Values.externalSecrets.provider "gcp" }}
  provider:
    gcpsm:
      projectId: {{ .Values.externalSecrets.gcp.projectId }}
      {{- if .Values.externalSecrets.gcp.serviceAccount }}
      auth:
        workloadIdentity:
          clusterLocation: {{ .Values.externalSecrets.gcp.clusterLocation }}
          clusterName: {{ .Values.externalSecrets.gcp.clusterName }}
          serviceAccountRef:
            name: {{ include "retrofitlink.serviceAccountName" . }}
      {{- else }}
      auth:
        secretRef:
          secretAccessKey:
            name: {{ .Values.externalSecrets.gcp.secretKey.secretName }}
            key: {{ .Values.externalSecrets.gcp.secretKey.key }}
      {{- end }}
  {{- else if eq .Values.externalSecrets.provider "azure" }}
  provider:
    azurekv:
      vaultUrl: {{ .Values.externalSecrets.azure.vaultUrl }}
      {{- if .Values.externalSecrets.azure.tenantId }}
      tenantId: {{ .Values.externalSecrets.azure.tenantId }}
      {{- end }}
      auth:
        {{- if .Values.externalSecrets.azure.workloadIdentity }}
        workloadIdentity:
          serviceAccountRef:
            name: {{ include "retrofitlink.serviceAccountName" . }}
        {{- else }}
        clientId: {{ .Values.externalSecrets.azure.clientId }}
        clientSecret:
          name: {{ .Values.externalSecrets.azure.clientSecret.secretName }}
          key: {{ .Values.externalSecrets.azure.clientSecret.key }}
        {{- end }}
  {{- end }}
{{- end }}
